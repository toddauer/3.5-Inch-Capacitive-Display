#include <Arduino_GFX_Library.h>
#include "SPI.h"

#include "ft6336u.h"
#define SPI_MISO 42
#define SPI_MOSI 2
#define SPI_SCLK 1

#define SD_CS 38

#define LCD_CS 39
#define LCD_DC 41
#define LCD_RST 40
#define LCD_BL 6

#define TP_INT 17
#define TP_RST 16
#define TP_SDA 15
#define TP_SCL 7


#define LCD_VER_RES 480
#define LCD_HOR_RES 320


SPIClass fspi(FSPI);

Arduino_DataBus* bus = new Arduino_ESP32SPI(LCD_DC /* DC */, LCD_CS /* CS */, SPI_SCLK /* SCK */, SPI_MOSI /* MOSI */, SPI_MISO /* MISO */, FSPI);
Arduino_GFX* gfx = new Arduino_ST7796(
  bus, LCD_RST /* RST */, 0 /* rotation */, true, LCD_HOR_RES, LCD_VER_RES);


void display_color_test(void) {
  gfx->fillScreen(WHITE);
  delay(1000);  // 1 seconds
  gfx->fillScreen(RED);
  delay(1000);  // 1 seconds
  gfx->fillScreen(GREEN);
  delay(1000);  // 1 seconds
  gfx->fillScreen(BLUE);
  delay(1000);  // 1 secondsb
  gfx->fillScreen(WHITE);
  delay(1000);
  gfx->fillScreen(BLACK);
  delay(1000);
}

/*---------------------SETUP---------------------------*/
void setup() {
  Serial.begin(115200); // Start serial monitor
  Serial.println("Display and Touch Test");
  touch_init(TP_SDA, TP_SCL, TP_RST, TP_INT);

  // Init Display
  if (!gfx->begin()) {
    Serial.println("gfx->begin() failed!");
  }

  pinMode(LCD_BL, OUTPUT); 
  digitalWrite(LCD_BL, HIGH); // Turn the display backlight on

  display_color_test();
  gfx->setRotation(0);  // 90 degrees
  gfx->fillScreen(NAVY);
  gfx->setTextSize(2);                // Size multiplier (not needed with GFX fonts)
  gfx->setTextColor(WHITE, NAVY);   // Yellow text on blue background
  gfx->setCursor(0,10);             // Set position
  gfx->println("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
  gfx->println("");
  gfx->println("abcdefghijklmnopqrstuvwxyz");
  gfx->println("");
  gfx->println("1234567890!@#$%^&*(){}[]<>");
}

toucht_coords_t toucht_coords; 
int counter;
/*----------------------LOOP--------------------------*/
void loop() {
  if (get_touch_coords(&toucht_coords))
  {
    gfx->fillCircle(toucht_coords.x, toucht_coords.y, 2, GREEN);
  }
  gfx->setCursor(10,160);
  gfx->print(counter);
  counter++;
  delay(10);
}
